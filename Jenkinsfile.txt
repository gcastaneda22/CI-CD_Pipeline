pipeline{
    agent any
    
    
    environment{
        SONARQUBE_SERVER = 'http://sonar:9000'
        DOCKER_IMAGE = 'gcastaneda22/java-app:latest'
    }
    
    
    stages{
        stage('Checkout'){
            steps{
                git 'https://github.com/gcastaneda22/CI-CD_Pipeline'
            }
        }
        
        
        stage('Build'){
            steps{
                script{
                    docker.image(openjdk:17-jdk).inside{
                        sh 'mvn clean package'
                    }
                }
            }
        }
        
        
        stage('Test'){
            steps{
                script{
                    docker.image('openjdk:11-jdk').inside{
                        sh 'mvn test'
                    }
                }
            }
        }
        
        
        stage('Static Code Analysis'){
            steps{
                script{
                    docker.image('openjdk:8-jdk').inside{
                        sh 'mvn sonar:sonar -Dsonar.host.url=${SONARQUBE_SERVER}'
                    }
                }
            }
        }
        
        
        stage('Build Docker Image'){
            steps{
                script{
                    sh 'docker build -t ${DOCKER_IMAGE}.'
                }
            }
        }
        
        
        stage('Push to Docker Hub'){
            steps{
                script{
                    sh 'docker login -u gcastaneda22 -p Gcsp103700972!'
                    sh 'docker push ${DOCKER_IMAGE}'
                }
            }
        }
        // for Kubernetes implementation just remove comment slashes and this line
        //stage('Deploy to Kubernetes'){
            //steps{
                //script{
                    //sh 'kubectl apply -f deployment.yml'
                }
            }
        }
    }
}
